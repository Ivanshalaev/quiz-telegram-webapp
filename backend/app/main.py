from fastapi import FastAPI, Depends
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

from backend.app.database import Base, engine, get_session
from backend.app.models.quiz import Quiz
from backend.app.routes import quiz as quiz_routes
from backend.app.routes import auth  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é

app = FastAPI(
    title="Quiz Telegram WebApp API",
    version="1.0.0"
)

# üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
@app.on_event("startup")
async def startup():
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)

# ‚úÖ –ù–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç: GET /quizzes
@app.get("/quizzes")
async def get_quizzes(session: AsyncSession = Depends(get_session)):
    result = await session.execute(select(Quiz))
    quizzes = result.scalars().all()
    return [{"id": q.id, "title": q.title} for q in quizzes]

# üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
app.include_router(quiz_routes.router)
app.include_router(auth.router)
